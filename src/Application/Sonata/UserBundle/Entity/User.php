<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;
use Application\RelationsBundle\Entity\EpostGroup;
use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;
/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
    /**
     * @var integer $id
     */
    protected $id;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }
    
       /**
     * @var \ChronoUserGroup
     *
     * @ORM\ManyToOne(targetEntity="Application\RelationsBundle\Entity\EpostGroup",inversedBy="users", cascade={"persist", "merge"}))
     * @ORM\OrderBy({"nomGroup" = "ASC"})
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="id_group", referencedColumnName="id",nullable=false)
     * })
     * @ORM\OrderBy({"nom_group" = "ASC"})
    */
    private $idgroup;
    
    
    /**
     * Set idgroup
     *
     * @param \Application\RelationsBundle\Entity\EpostGroup $idgroup
     * @return ChronoUser
     */
    public function setIdgroup(EpostGroup $idgroup)
    {
        $this->idgroup = $idgroup;
    
        return $this;
    }

    /**
     * Get idgroup
     *
     * @return Application\RelationsBundle\Entity\EpostGroup
     */
    public function getIdgroup()
    {
        return $this->idgroup;
    }
    
     protected $city;
     
     public function getCity()
    {
        return $this->city;
    }
     public function setCity($city)
    {
        $this->city = $city;
    
        return $this;
    }
  
    
}